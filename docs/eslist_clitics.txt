Enclitics in eslist

About 95% of the items in eslist are verbforms (654197 vblex + 389 vbser + ? vbhaver out of a total of 687846 items), and around 87% (566964) of those are verbforms with enclitics attached.  We can therefore trim the dictionary by omitting these, and having them analysed on the fly.  The following list sets out the combinations that are already in the dictionary, and which we should set up for analysis.

la
las
le
les
lo
lo
los

me 
+ above - melas 11769

te
+ above
teme 11976
tenos 12201

se
+ above - selas 6739
seme
seos
senos 6790
sete

nos 
+ above

os
+ above
osme
osnos 10048


mf.1s - me
mf.1s   f.3s
mf.1s   f.3p - melas
mf.1s   mf.3s
mf.1s   mn.3s
mf.1s   m.3p
mf.1s   mf.3p

mf.1p
mf.1p   f.3s
mf.1p   mf.3s
mf.1p   mn.3s
mf.1p   f.3p
mf.1p   m.3p
mf.1p   mf.3p

mf.2s
mf.2s   mf.1s
mf.2s   mf.1p
mf.2s   f.3s
mf.2s   mf.3s
mf.2s   mn.3s
mf.2s   f.3p - 
mf.2s   m.3p
mf.2s   mf.3p

mf.2p 
mf.2p   mf.1s
mf.2p   mf.1p
mf.2p   f.3s
mf.2p   mf.3s
mf.2p   mn.3s
mf.2p   f.3p
mf.2p   m.3p
mf.2p   mf.3p

f.3s
mf.3s
mn.3s
mf.3s   mf.1s
mf.3s   mf.1p
mf.3s   mf.2s
mf.3s   mf.2p
mf.3s   f.3s
mf.3s   mf.3s
mf.3s   mn.3s
mf.3s   f.3p
mf.3s   m.3p
mf.3s   mf.3p

f.3p
m.3p
mf.3p

    

    

Remove1 (los|las|les|nos), store1 and lookup1; then remove2 (la|le|lo|me|te|se|os), store2 and lookup2. 

select * from eslist_big where surface~'búsque'

Once the clitics are stripped from (eg) dígame, there is no entry for the standalone díga (which would be orthographically incorrect), so we either have to do additional entries for these decliticised words, or strip the accents from them and then do a lookup.  May be better to add additional items, because allomorphs may occur that only exist in combination with the clitic forms (eg decí, digámo, dígan, díga; buscá, buscád, búsca, búsquen, etc).  To get these, we could pull out all the clitic forms from eslist_big into a new table, and do removes as above.  Write what's left into a new field, along with what's before the + in the pos field into a new field.  Then group by the verb part, and put that plus the pos entry into eslist as new entries.  In the register field we could note that it is a bound form used with clitics.  (An alternative is to look at whether we might not get better results by using a free conjugator for Spanish.)
 
Should the register field be changed to a name that reflects something a bit wider than that?  Notes?

create table clitics as select * from eslist_big where pos ~ 'prn.enc'

select verbform, count(verbform), declitpos from clitics_test group by verbform, declitpos order by verbform
select * from clitics_test where declitpos='vblex.imp.p1.pl'

create table clitic_forms as select verbform, count(verbform), lemma, enlemma, declitpos from clitics group by verbform, lemma, enlemma, declitpos order by verbform

select verbform, count(verbform) from clitic_forms where declitpos='vblex.imp.p1.pl' and verbform ~'m$' group by verbform order by verbform
delete from clitic_forms where declitpos='vblex.imp.p1.pl' and verbform ~'m$' -- to get rid of misanalysis where busquémosle gets analysed as busquém+os+le instead of busquémos+le (vblex.imp.p1.pl) -- deletion will not affect the remaining entries

delete from clitic_forms where verbform in (select surface from eslist)  -- remove forms (eg abandonar, vblex.inf) that already exist in eslist

INCORRECT!
Combine vblex.imp.p3.pl entries with vblex.imp.p3.sg:
select * from clitic_forms where lemma='decir' order by verbform
update clitic_forms set declitpos='vblex.imp.p3.sp' where declitpos='vblex.imp.p3.sg'
delete from clitic_forms where declitpos='vblex.imp.p3.pl' and verbform ~ '[^n]$'
There are two vblex.imp.p3.pl groups, one with 8 and one with 47 entries.  
NO!!!  What is happening is that háblenosles is getting analysed as háble+nos+les instead of háblen+os+les, so we get 8 instances of vblex.imp.p3.pl logged as háble instead of háblen.  So reverse the earlier change:
update clitic_forms set declitpos='vblex.imp.p3.sg' where declitpos='vblex.imp.p3.sp'

Ditto for the vbser.imp.p3.sg and vbser.imp.p3.pl, and vbmod.imp.p3.sg and vbmod.imp.p3.pl entries:
delete from clitic_forms where declitpos~'(vbmod|vbser|vbhacer).imp.p3.pl' and verbform ~ '[^n]$'

We are left with 15092 entries in clitic_forms to add to eslist.  First, we need to adjust the pos info as in the queries below.

update clitic_forms set number='1p', tense='imper' where declitpos ~ 'imp.p1.pl'
update clitic_forms set number='2p', tense='imper' where declitpos ~ 'imp.p2.pl'
update clitic_forms set number='3p', tense='imper' where declitpos ~ 'imp.p3.pl'
update clitic_forms set number='3s', tense='imper' where declitpos ~ 'imp.p3.sg'
update clitic_forms set number='2s', tense='imper' where declitpos ~ 'imp.p2.sg'
update clitic_forms set tense='infin' where declitpos ~ 'inf'
update clitic_forms set tense='prespart' where declitpos ~ 'ger'

Remove entries where the imperative 3s of verbs ending in -tar has been misanalysed as verbform+te (eg coméntelo as comén+te+lo instead of coménte+lo):
select * from clitic_forms where lemma ~'t(a|e|i)r$' and tense ='imper' and number='3s' and verbform !~ 't(a|e)$' order by verbform
select * from clitics where lemma ='relatar' and declitpos='vblex.imp.p3.sg' order by verbform
delete from clitic_forms where lemma ~'t(a|e|i)r$' and tense ='imper' and number='3s' and verbform !~ 't(a|e)$'
Same for verbs in -mar (misanalysed as -me)
select * from clitic_forms where lemma ~'t(a|e|i)r$' and tense ='imper' and number='3s' and verbform !~ 't(a|e)$' order by verbform
delete from clitic_forms where lemma ~'m(a|e|i)r$' and tense ='imper' and number='3s' and verbform !~ 'm(a|e)$'
Same for verbs in -sar (misanalysed as -se)
select * from clitic_forms where lemma ~'s(a|e|i)r$' and tense ='imper' and number='3s' and verbform !~ 's(a|e)$' order by verbform
delete from clitic_forms where lemma ~'s(a|e|i)r$' and tense ='imper' and number='3s' and verbform !~ 's(a|e)$'

Oops.  Need to do the same for imperative 2s:
select * from clitic_forms where lemma ~'t(a|e|i)r$' and tense ='imper' and number='3s' and verbform !~ 't(a|e)$' order by verbform
select * from clitic_forms where lemma ~'s(a|e|i)r$' and tense ='imper' and number='3s' and verbform !~ 's(a|e)$' order by verbform
select * from clitic_forms where lemma ~'m(a|e|i)r$' and tense ='imper' and number='3s' and verbform !~ 'm(a|e)$' order by verbform

This leaves 14716 entries.  Copy them into the eslist table:
insert into eslist (surface, lemma, pos, enlemma, mypos, number, tense, register) select verbform, lemma, declitpos, enlemma, mypos, number, tense, register from clitic_forms

Tidying up eslist:
Rename eslist to eslist_big
insert into eslist select * from eslist_big where pos !~ 'prn.enc'

select lemma, count(*) from eslist where enlemma is null and pos ~'vblex' group by lemma order by lemma
There are 30 verbsets where there is no enlemma - these will need to be added manually.

The Apertium dictionary contains an excessive number of categories for the POS tag - there are over 400 of these, many of them with only a few entries.  They seem to have gone overboard on determiners especially.

update eslist set mypos = 'n' where pos ~ 'n.(m|f).'  -- note that this also catches prn!
update eslist set gender = 'm' where pos ~ 'n.m.'
update eslist set gender = 'f' where pos ~ 'n.f.'
update eslist set number = 'sg' where pos ~ 'n.(m|f).sg'
update eslist set number = 'pl' where pos ~ 'n.(m|f).pl'

update eslist set mypos = 'adj' where pos ~ 'adj.'
update eslist set mypos = 'adj.sup' where pos ~ 'adj.sup'
update eslist set mypos = 'adj.pos' where pos ~ 'adj.pos'
update eslist set mypos='adj.poss' where pos ~ 'det.pos'
update eslist set gender='m' where pos ~ 'adj.(sup.|pos.)m.'
update eslist set gender='f' where pos ~ 'adj.(sup.|pos.)f.'
update eslist set gender='mf' where pos ~ 'adj.(sup.|pos.)mf.'
update eslist set gender='mf' where pos ~ 'adj.mf.'
update eslist set gender='f' where pos ~ 'adj.f.'
update eslist set gender='m' where pos ~ 'adj.m.'
update eslist set number = 'pl' where pos ~ 'adj.*.pl'
update eslist set number = 'sg' where pos ~ 'adj.*.sg'

update eslist set mypos = 'adv' where pos = 'adv'
update eslist set pos='adv', mypos='adv' where pos='adv\n' - some of the adverbs have a newline after the entry; this errant \n is quite common, and subsequent queries try to expunge it as well
update eslist set pos='preadv', mypos='adv' where pos='preadv\n' or pos='preadv'

update eslist set mypos='prep' where pos='pr\n' or pos='pr'

update eslist set mypos='vinf' where pos ~ 'vbhaver.inf' or pos ~ 'vbser.inf' or pos ~ 'vbmod.inf' or pos ~ 'vblex.inf' 
update eslist set mypos='vfle' where pos ~ 'vbhaver.[^inf]' or pos ~ 'vbser.[^inf]' or pos ~ 'vbmod.[^inf]' or pos ~ 'vblex.[^inf]' - LOLZ: this does NOT select all verbforms that are not marked inf - it selects those which do not have i, n or f as the character following the first character after vbser (which just happens to be a dot, but the regex does not specify a dot)
update eslist set mypos='vfle' where pos ~ 'vbhaver.(fti|fts|ifi|imp)' or pos ~ 'vbser.(fti|fts|ifi|imp)' or pos ~ 'vbmod.(fti|fts|ifi|imp)' or pos ~ 'vblex.(fti|fts|ifi|imp)'
Note: should have been vbhaver in the above, not vbhacer (fixed).

update eslist set number='1s' where mypos='vfle' and pos~'p1.sg'
update eslist set number='2s' where mypos='vfle' and pos~'p2.sg'
update eslist set number='3s' where mypos='vfle' and pos~'p3.sg'
update eslist set number='1p' where mypos='vfle' and pos~'p1.pl'
update eslist set number='2p' where mypos='vfle' and pos~'p2.pl'
update eslist set number='3p' where mypos='vfle' and pos~'p3.pl'

update eslist set tense='imper' where pos~'imp'
update eslist set tense='pastpart' where pos~'pp'
update eslist set gender='m' where tense='pastpart' and pos~'m'
update eslist set gender='f' where tense='pastpart' and pos~'f'
update eslist set tense='prespart' where pos~'ger'
update eslist set tense='pres' where pos~'pri'
update eslist set tense='imperf' where pos~'pii'
update eslist set tense='fut' where pos~'fti'
update eslist set tense='futsubj' where pos~'fts'
update eslist set tense='cond' where pos~'cni'
update eslist set tense='pressubj' where pos~'prs'
update eslist set tense='imperfsubj' where pos~'pis'
update eslist set tense='past' where pos~'ifi'
update eslist set tense='inf' where mypos='vinf'
update eslist set mypos='v' where mypos='vinf'
update eslist set mypos='v' where mypos='vfle'

select pos, count(*) from eslist where mypos is null and pos~'vbhaver' group by pos order by pos
update eslist set mypos='vinf' where pos ~ 'vbhaver.inf'
update eslist set mypos='vfle' where pos ~ 'vbhaver.(cni|fti|ger|ifi|pii|pis|pp|pri|prs)'
update eslist set tense='pastpart' where pos~'vbhaver.pp'
update eslist set tense='cond' where pos~'vbhaver.cni'
update eslist set tense='fut' where pos~'vbhaver.fti'
update eslist set tense='prespart' where pos~'vbhaver.ger'
update eslist set tense='past' where pos~'vbhaver.ifi'
update eslist set tense='imperf' where pos~'vbhaver.pii'
update eslist set tense='imperfsubj' where pos~'vbhaver.pis'
update eslist set tense='pres' where pos~'vbhaver.pri'
update eslist set number='1s' where mypos='vfle' and pos~'vbhaver.*p1.sg'
update eslist set number='2s' where mypos='vfle' and pos~'vbhaver.*p2.sg'
update eslist set number='3s' where mypos='vfle' and pos~'vbhaver.*p3.sg'
update eslist set number='1p' where mypos='vfle' and pos~'vbhaver.*p1.pl'
update eslist set number='2p' where mypos='vfle' and pos~'vbhaver.*p2.pl'
update eslist set number='3p' where mypos='vfle' and pos~'vbhaver.*p3.pl'

update eslist set pos='cnjadv', mypos='conj' where pos='cnjadv\n' or pos='cnjadv'
update eslist set pos='cnjcoo', mypos='conj' where pos='cnjcoo\n' or pos='cnjcoo'
update eslist set pos='cnjsub', mypos='conj' where pos='cnjsub\n' or pos='cnjsub'

select pos, count(*) from eslist where mypos is null group by pos order by pos

delete from eslist where pos ~ 'np.loc' or pos ~'np.cog' or pos ~'np.ant' or pos ~'np.al' or pos ~'n.acr' -- delete all names, since the autoglosser assumes that anything capitalised is a name

update eslist set mypos='ord' where pos ~ 'det.ord'
update eslist set gender='m' where pos ~ 'det.ord.m'
update eslist set gender='f' where pos ~ 'det.ord.f'
update eslist set number='pl' where pos ~ 'det.ord.*pl'
update eslist set number='sg' where pos ~ 'det.ord.*sg'

update eslist set mypos='interj' where pos ~ 'ij'

Remove duplicates:
select surface, lemma, enlemma, mypos, gender, number, tense from eslist GROUP BY surface, lemma, enlemma, mypos, gender, number, tense HAVING COUNT(*) > 1 limit 500
will list the items with more than one entry, but it's easiest to create a new table without the dup.icates:
create table dedup as select distinct on (surface, lemma, enlemma, mypos, gender, number, tense) * from eslist
and then swap that for the original:
drop table eslist
alter table dedup rename to eslist







Extract only utterances with mainly Spanish text to test the CG:
First, rename the existing tables to herring7_cgutterances_all, and herring7_cgwords_all.  Then:
create table herring7_cgutterances as select * from herring7_cgutterances_all where utterance_id in (select utterance_id from herring7_cgwords_all where langid='3')
Then:
php rewrite_utterances.php herring7






Refactored Apertium Spanish dictionary:
removed names
removed duplicates
tidied up determiners/pronouns a bit
removed pre-clitic verbforms
added them as separate entries to cover orthographical issues
132992 entries






Freedict - tidy up using ad hoc F&R in Geany, and import; then delete anything that is already in eslist
delete from freedict_spa_eng where spa in (select surface from eslist)

Actually, it may be better to add these items as a separate field, so that we don't lose the synonyms.

update freedict_spa_eng set pos='v', tense='infin' where spa ~ '(a|e|i)r$' and spa !~' '
update freedict_spa_eng set pos='h' where spa ~ ' '
















