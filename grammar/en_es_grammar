#  General notes
#  Combining or and not will not necessarily work: select (x) if (1 y) or (not 1 z) does not fire properly
#  If the tag substitution for English uses dotted notation, none of the other rules will bite, because they are all using spaced notation.
#  You can't combine conditions applying to adj -1 position OR adj 1 position.
#  Substitute lines have to be in order of greatest number of tags in the match section, otherwise rules will fire on some tags, and change the tags so that the larger match never matches.  For instance: sv infin pv.

DELIMITERS = "<.>" "<!>" "<?>";

LIST noun = n;
LIST verb = v;
LIST infinitive = (v infin);
SET inflected = (v) - (infin);  # ie the set of all verbs, minus the set of all infinitives; note that you cannot use LIST here
SET non_imper = (v) - (imper);
LIST preposition = prep;
LIST pronoun = pron;
LIST adjective = adj;
LIST adverb = adv;
LIST conjunction = conj;
LIST concessive = "oh" "well";
LIST exclamation = im;
LIST interrogative = im;
LIST phrase = h;
LIST placename = pn;

LIST initvowel = "a.*"ri "e.*"ri "i.*"ri "o.*"ri "u.*"ri "w.*"ri "y.*"ri;

LIST preverbal = "<just>" "<actually>" "<still>" "<even>" "<like>";

LIST modal = "licio" "gobeithio" "gallu";

LIST countable = "munud" "ceiniog";

#SET amvnoun = amvinf or amnoun;
# note use of "or" (|) above; "and" (+) does not work because it yields all possible combinations of the elements in the two sets; since the n and vinf tags will never occur together, the set will never be valid; the following has the same effect:
LIST amvnoun = (vinf am) or (n am);




SECTION

##### Rules for English #####

#remove ([en] infin) if (not 1 pronoun);

remove ([en] conj pv);  # he likes; 





### Rewrite English tags ###

substitute (asv) (v+ing) ([en] n) (-1 ([es] v));  # combine with [1] below?
# The order of the source tags defines where the target tag will be placed;  here, the v+ing will go in the position occupied by asv; if you turn this around, to (n sg asv), the v+ing will go in the position of n sg.  The above also keeps the + in + asv; if the + is included in the source (+ asv n sg) then it will also be removed from the line.  You need to include [en] in the target environment, otherwise it applies to ALL words tagged n, including Spanish ones.
#substitute (n) (v+ing) (n) (-1 ([es] v));

#substitute (infin) (prespart) ([en] asv) (-1 ([es] v 3s pres));  # doesn't work

substitute (gb) (have.v.3s.pres) ("<he's>") (1 ([en] v past+p));  # he's got it

substitute (gb) (be.v.3s.pres) ("<that's>");
substitute (gb) (be.v.3s.pres) ("<it's>");
substitute (gb) (be.v.3s.pres) ("<he's>");  # he's got it
substitute (gb) (be.v.3s.pres) ("<she's>");  # she's gonna be
substitute (gb) (be.v.3s.pres) ("<there's>");  # there's no raise
substitute (gb) (us.pron.sub.1p) ("<let's>");  # let's bring

substitute (gb) (=poss) ([en] n sg) (1 ([en] n));  # the daughter's pet

substitute (n sg pv) (n pl) ([en] n sg pv);  # because pools are good; kids; houses

substitute (as) (adj) ([en] as) (1 ([en] n) or ([en] pron));  # a miniature rabbit; miniature ones
substitute (as) (n sg) ([en] as) (-1 ([en] det.def) or ([en] det.indef));  # a miniature

#substitute (adj comp.ag) (adj.comp) ([en] comp.ag) (1 (n));  # smaller box
substitute (adj comp.ag) (adj.comp) ([en] adj comp.ag);  # is cheaper but - CHECK - try this wider version for a while
substitute (sv infin comp.ag) (n.ag) ([en] sv infin comp.ag) (-1 (det.indef));  # un camper

substitute (sv infin pv) (v 3s pres) ([en] pv) (-1 ([en] dem.far) or (pron.sub 3s) or (pron));  # that starts; he presses
substitute (sv infin) (v 12s13p pres) ("<don't>");  # you don't 
substitute (sv infin) (v prespart) ("<gonna>");  # gonna have

substitute (13s) (3s) ([en] v 13s) (not -1 (pron.sub 1s));  # American_Outdoors was
substitute (12s13p) (1s) ([en] v 12s13p) (-1 (pron.sub 1s));  # I don't
substitute (12s13p) (2sp) ([en] v 12s13p) (-1 (pron.sub 2sp));  # you don't
substitute (12s13p) (3p) ([en] v 12s13p) (-1 (pron.sub 3p));  # they don't
substitute (12s13p) (3p) ([en] v 12s13p) (0 ("<don't>")) (1 (pron.sub 3p));  # don't they
substitute (2s123p) (1p) ([en] v 2s123p) (-1 (pron.sub 1p) or (n pl));  # we were; 
substitute (2s123p) (3p) ([en] v 2s123p) (-1 (pron.sub 3p) or (n pl));  # they were; the taxes were
substitute (123p) (1p) ([en] v 123p) (-1 (pron.sub 1p));  # we are
substitute (123p) (2sp) ([en] v 123p) (-1 (pron.sub 2sp));  # you are
substitute (123p) (3p) ([en] v 123p) (-1 (pron.sub 3p));  # they are
substitute (123p) (3p) ([en] v 123p) (not -1 (pron.sub 1p) or (pron.sub 2p));  # so many people from the county are # dubious
substitute (123sp) (1s) ([en] v 123sp) (-1 (pron.sub 1s));  # I can
substitute (123sp) (2sp) ([en] v 123sp) (-1 (pron.sub 2sp));  # you can
substitute (3p) (2sp) ([en] v 3p) (0 ("be") or ("can") or ("have") or ("do")) (1 (pron.sub 2sp));  # are you  # SEC
substitute (123sp) (3s) ([en] v 123sp) (-1 (pron.sub 3s));  # he can

substitute (sv infin asv) (v prespart) ([en] sv infin asv) (1 ([en] det.def ) or ([en] dem.far) or ([en] "for"));  # finding that; working for
substitute (sv infin asv) (v prespart) ([en] sv infin asv) (-1 ([en] "be") or preverbal or (:go:) or ([en] "do"));  # we were looking; vamos camping; as they do selling
substitute (sv infin asv) (v prespart) ([en] sv infin asv) (-1 ([en] v));  # that starts cooling;
substitute (sv infin asv) (v prespart) ([en] sv infin asv) (-2 ([en] v)) (-1 ("not"));;  # you are not seeing
substitute (sv infin asv) (v prespart) ([en] sv infin asv) (1 ([en] n));  # a camping spot;

substitute (sv infin asv) (n sg ger) ([en] sv infin asv) (-1 (prep+det.def) or (det.def) or (det.indef));  # del meeting; the hiring;

substitute (sv infin av) (v pastpart) ([en] sv infin av) (-1 ([en] "be") or (be.v.3s.pres) or ([en] "have"));  # it's slanted;
substitute (sv infin av) (v pastpart) ([en] sv infin av) (-2 ([en] "be") or (be.v.3s.pres) or ([en] "have")) (-1 ("not"));  # have not increased
substitute (sv infin av) (v pastpart) ([en] sv infin av) (1 ([en] sv infin));  # smoked

substitute (sv infin av) (v past) ([en] sv infin av) (-1 ([en] pron.sub) or (name));  # they closed; Pepita moved
substitute (sv infin av) (v past) ([en] sv infin av) (-2 ([en] pron.sub)) (-1 preverbal);  # they just closed

substitute (av past) (v past) ([en] av past) (-1 ([en] pron.sub)) (not -1 (have.v.pres));  # we bought; !you've done
#substitute (av past) (v past) ([en] av past) (not 1 ([en] n));  # that came about - too broad?
substitute (av past) (v past) ([en] av past) (1 ([en] pron.sub));  # that made it

substitute (av past) (v pastpart) ([en] av past) (-1 (have.v.pres) or ("have") or ("be"));  # you've done; you have done; it was misspent

substitute (sv infin pv) (v pres 3s) ([en] sv infin pv) (-2 ([en] adj.poss) or ([en] adj)) (-1 ([en] n sg));  # his wife puts
substitute (sv infin pv) (v pres 3s) ([en] sv infin pv) (-2 ([en] n)) (-1 preverbal);  # the whole thing like opens up;
substitute (sv infin pv) (n pl) ([en] sv infin pv) (-1 ([en] adj) or ([en] n) or ("det.*"r) or ("at" prep));  # other offers; speed bumps

substitute (sv infin) (v 1s pres) ([en] sv infin) (-1 ([en] pron.sub 1s));  # I mean
substitute (sv infin) (v 1p pres) ([en] sv infin) (-1 ([en] pron.sub 1p));  # we do
substitute (sv infin) (v 2sp pres) ([en] sv infin) (-1 ([en] pron.sub 2sp));  # you know; you get
substitute (sv infin) (v 2sp pres) ([en] sv infin) (-2 ([en] pron.sub 2sp)) (-1 preverbal);  # you just get
substitute (sv infin) (v 3s pres) ([en] sv infin) (-1 ([en] pron.sub 3s)) (not -1 (+be.v.3s.pres));  # he keep[s]
substitute (sv infin) (v 3p pres) ([en] sv infin) (-1 ([en] pron.sub 3p) or (n pl));  # they build; employees have

substitute (sv infin) (v infin) ([en] sv infin) ((-1 ("to" [en] prep)) or (-2 ("to" [en] prep)));  # to actually put it
substitute (sv infin) (v infin) ([en] sv infin) (-1 ("<gonna>") or ("<gotta>") or ("<don't>") or ("<wanna>") or preverbal);  # gonna be; gotta wait; don't have to
substitute (sv infin) (v infin) ([en] sv infin) (1 ([en] pron));  # match everything
substitute (sv infin) (v infin) ([en] sv infin) (1 ([en] det.def)) (2 (n));  # install the hammock
substitute (sv infin) (v infin) ([en] sv infin) (-1 ([en] v));  # couldn't find it
substitute (sv infin) (v infin) ([en] sv infin) (-1 (>>>));  # change.
substitute (sv infin) (v infin) ([en] sv infin) (-1 (conj));  # and open it

substitute (sv infin) (v imper) ([en] sv infin) ((-1 ("oh")) or (0 ("<let's>")));  # oh look!; let's bring
substitute (sv infin) (v imper) ([en] sv infin) (-1 ("well"));  # well bring me # this is not a very good rule!
substitute (sv infin) (v imper) ([en] sv infin) (1 ("God"));  # thank God

substitute (infin) (v imper) ([en] infin) (0 ("<let's>"));  # thank God

substitute (sv infin) (n sg) ([en] sv infin) (-1 ([en] adj)) (-2 ([en] det.def) or ([en] det.indef));  # a good deal
substitute (sv infin) (n sg) ([en] sv infin) (-1 ("det.*"r) or ("at" prep) or (v pastpart));  # a raise; the cut; at work; smoked barbecue
substitute (sv infin) (n sg) ([en] sv infin) (-1 ([en] n) or ([en] "more") or ([en] "no") or ([en] det.def) or ([en] det.indef));  # speed bump; more work; no raise; the cut down (cut-down?)

substitute (be.v.3s.pres) (have.v.3s.past) ("<it's>") (1 (av past+p));  # it's got; 
substitute (be.v.3s.pres) (have.v.3s.past) ("<he's>") (1 (av past+p));  # he's got it; 
substitute (av past+p) (v pastpart) ([en] av past+p) (-1 ([en] "have") or ("<he's>") or (have.v.3s.past));  # he's got it; it's got; 
substitute (av past+p) (v past) ([en] av past+p) (-1 ([en] pron.sub) or (name));  # she got; Pepa had

substitute (pron.sub) (pron.obj) ([en] pron.sub) (-1 ([en] v infin));  # and open it
substitute (pron.sub) (pron.obj) ([en] pron.sub) (-1 ([en] v) link not 2 ([en] v)) (not 0 (be.v.3s.pres));  # they take it away; !I mean it's ...;
substitute (pron.sub) (pron.obj) ([en] pron.sub) (-1 ("<that's>") or ("worth"));  # that's it; worth it
substitute (pron.sub) (pron.obj) ([en] pron.sub) (-1 ([en] "for" prep)) (not 1 ([en] v));  # for you; !for, you know, they; 
substitute (pron.sub) (pron.obj) ([en] pron.sub) (-1 ([en] prep)) (1 (<<<));  # in it.; 

substitute (pron.obj) (pron.sub) ([en] pron.obj 3s) (-1 ("<isn't>") or ("<is>"));  # isn't it; is it

substitute (pron.obj) (pron.indir) ([en] pron.obj) (-1 ("buy") or ("send") or ("bring")) (1 ([en] det.def) or ([en] det.indef) or ([en] n));  # I bought him a; to send you the stuff; !they bought things

substitute (pron.refl) (pron.refl.indir) ([en] pron.refl) (-1 ("buy"));  # he bought himself

substitute (pron sg pl) (pron pl) ([en] pron sg pl)  # the miniature ones

substitute (r s p) (r p) ([en] r s p);  # miniature ones

substitute (adv) (ly) ([en] adj adv);  # originally, fairly  # CHECK
substitute (adj) (adv) ([en] adj) (-1 ([en] v)) (not 1 ([en] n) or ([en] dem.far));  # to work double; all that extra money

substitute (adv) (pron) ("<there's>"); 

substitute (v 1s pres) (v infin) ([en] v 1s pres) (-1 (+be.v.fut));  # I'll have

substitute (adj) (pron) ([en] "own" adj) (-1 (adj.poss)) (not 1 (n));  # on my own

substitute (rel) (adv) ("where" [en] rel) (1 ("be" [en] v));  # where is


### English disambiguations ###

select ([en] dem.far) if ((-1 ("like" conj) or ("and" conj)) or (1 ("be" [en] v 3s)));  # like that; that is
select ([en] dem.far) if (1 (adj) or (n));
select ([en] dem.far) if (0 ("<that's>"));  # so that's something
select ([en] dem.far) if (1 (<<<));  # finding that. ; 

select ("that" [en] conj) if (not 1 (adj) or (n));  # CHECK - too broad?
select ("that" [en] conj) if (1 (pron.sub)) (2 (v));
select ("that" [en] conj) if (1 ("have" [en] v 3s));  # that has
select ("that" [en] conj) if (1 ([en] "det.*"r));  # that the; that a
select ("that" [en] conj) if (-2 ([en] det.def )) (-1 (pron) or (n)) (1 (v));
select ("that" [en] conj) if (-1 ("now") or ("so"));  # now that; so that
select ("that" [en] conj) if (1 ("<it's>"));  # that it's 

select  ([en] pron) if (not -1 (n) or (num));  # this one; three zero one
select ([en] num) if (-1 ([en] num));  # three zero one
#select  ([en] pron) if (-1 (adj));  # little ones;

select ([en] num) if (1 (n));  # one advantage

select ("like" sv infin) if (-1 ("do" [en] v pres neg));  # you don't like
select ("like" v) if (-1 (pron.sub));  # he likes; you like
select ("like" [en] conj) if (1 ([en] det.indef) or ("what" w) or (pron.sub));  # like a house; like what; like we were
select ("like" [en] conj) if (-1 preverbal or (v));  # just like; they played, like, ...;

select ("even" [en] adj) if (not 1 (v));  # it's not even (=level)
select ("even" [en] adv) if (1 (v));  # they don't even wanna

select ([en] adv :back:) if (1 ([en] adv :here:) or ([en] adv :there:) or ([en] prep));  # back here; 
select ([en] adv :over:) if (1 ([en] adv :here:) or ([en] adv :there:));  # over there

select ([en] n sg) if (-1 ([en] det.indef) or ([en] det.def));  # in the back
select ([en] n sg) if (1 ("of")) (2 ([en] det.indef));  # kind of a

select ([en] adj.poss) if (1 ([en] n) or ([en] "own"));  # her companion; her own insurance
select ([en] pron.obj) if (not 1 (n));  # we brought her some

remove ([en] adj) if (not 1 ([en] n));  # and open it  # CHECK!

select ([en] v infin) if (1 (pron.obj) or (pron));  # and then match everything
select ([en] v) if (-1 (pron));  # everything opens up


# Global rules

# Incorrect segmentation of -er - perhaps better to do rules excluding these by context, since in some cases they can actually occur, eg a four-master ...
remove ("a"  [en] det.indef :a: pv);  # a-s
remove ("aft"  [en] adv :aft: a.comp);  # aft-er
remove ("broth" [en] n sg :broth: comp.ag);  # broth-er
remove ("mast" [en] n sg :mast: comp.ag);  # mast-er



##### Rules for Spanish #####

### To Do ###
# Rewrite viejito - old_guy.N.M.SG.DIM -> old_guy.DIM.N.M.SG - perhaps better to put this in write_cgautogloss.php.
# Rewrite to remove v, n, adj, adv?
# Rule to convert dem.adj to dem.pron when no accent is written.
# Rule to convert adjectives to pronouns when there is no noun attached.


# Articles

select ([es] det.def) if (1 (n f) or (adj f) or (ord f) or ([en] adj) or ([en] n)); # los dry walls
select ([es] det.def) if (1 (n m) or (adj m) or (ord m));
select ([es] det.def) if (-1 ("de" prep :of:));
select ([es] det.def) if (not 1 (v));  # los ladrillos ... los 
select ([es] det.def nt sg) if (1 ("que" [es] conj));  # en lo que

select ([es] det.indef f) if (1 (n f) or (adj f) or (ord f));
select ([es] det.indef m) if (1 (n m) or (adj m) or (ord m));
select ([es] det.indef) if (1 ([es] det.indef)) ;  # una ... un hammock
select ([es] det.indef) if (not 1 (n));  # una ... como se llama

select ("un" [es] pron) if (not 1 (n));  # no has visto una

# Conjunctions

substitute (conj) (pron.rel) ("que" [es] conj :that:) (-1 (n) or ("<lo>") or ("<del>") or ("<al>") or (det.indef));  # el hombre que me habló; el chico del que me hablaste; lo que están haciendo; yo tengo una que cada vez
select ("que" :that:) if (-1 ("<lo>"));  # lo que están haciendo

select ("que" :that:) if (not -1 (adj));
select ("que" conj :that:) if (-1 ("tener"));  # tiene que
select ([es] im) if (not 1 ([es] adj));
select ("como" [es] conj) if ((1 (pron.sub) or ("que" [es] conj) or ("aquí" [es] adv) or ("en" [es] prep)) or ((-1 ("ser" v))));
select ("como" [es] conj) if (1 (v));  # como está; como mataron

# Prepositions

select ("para" [es] prep :for:) if (1 (pron.obj) or (pron.dem) or (v infin) or ("que" conj) or (det.def));
select ("para" [es] prep) if (1 ("dentro" adv) or ("arriba" adv) or ("allá" adv));  # para dentro; para arriba; para allá
select ("entre" [es] prep :between:) if (not 1 ("en"));


# Nouns

select ([es] n m sg) if (-1 ([es] det.def  m sg) or ([es] det.indef m sg));
#remove ([es] n m sg) if (not -1 ([es] det.def  m sg) or ([es] det.indef m sg));  crap!
select ([es] n m pl) if (-1 ([es] det.def  m pl) or ([es] det.indef m pl));
select ([es] n f sg) if (-1 ([es] det.def  f sg) or ([es] det.indef f sg));
select ([es] n f pl) if (-1 ([es] det.def  f pl) or ([es] det.indef f pl));

select ([es] n) if (1 ("del" prep+det.def) or ("de" prep));
select ([es] n) if (-1 ("de" prep));  # de concreto
select ([es] n) if (-1 ("cualquier") or ("qué"));  # cualquier cosa; qué cosa
select ([es] n) if (-1 ([es] adj.dem));  # esa cosa
select ([es] n) if (-1 ([es] adj.poss));  # su idea


select ("gusto" n) if (-1 ("mucho" adj));
select ("casa" n f sg :house:) if (-1 (prep));


# Demonstratives

select ("este" adj.dem m sg) if (1 (n m sg));


# Pronouns

substitute (pron.sub) (pron.obj) ([es] pron.sub) (-1 ("a" [es] prep));  # a nosotros
#substitute (pron.obj) (pron.indir) ([es] pron.obj) (-1 ([es] pron.sub)) (1 ([es] pron.obj)) (2 ([es] v));  # yo te la voy; yo te la hago
#substitute (pron.obj) (pron.indir) ([es] pron.obj) (-1 ([es] pron.sub)) (1 ([es] v));  # yo me recuerdo
#substitute (pron.obj) (pron.indir) ([es] pron.obj) (-1 ([es] "no" adv)) (1 ([es] v));  # no te ha dado
# the above are covered now by using pron.obl for me, te, nos, os

select ([es] pron.refl) if (1 (v 3s) or (v 13s) or (v 3p));
select ("se" [es] pron.indir) if (1 (pron.obj)) (2(v));  # se lo hizo
select ("se" [es] pron.refl) if (1 ("<nos>"));  # se nos ha occurrido 
select ([es] pron.obj) if (1 ("que" conj));
#select ("sí" [es] pron.prep mf 3s) if (1 ([es] v));  # replaced by adverb rule below
select ([es] pron.sub 1s) if (1 ([es] v 1s));  # yo recuerdo;

select ([es] pron) if (1(v));  # cuando uno manda

select ("él" [es] pron.obj) if (1 (v));
select ("otro" pron) if (not 1 (n));
select ("uno" [es] pron) if (1 ("de"));
select ("todo" [es] pron) if (1 (v));
select ("uno" [es] pron) if (1 ("<.>"));  # has visto uno. ;


# Adverbs

select ([es] ) if (-1 ("más"));  # más cerca a
#select ([es] adv) if (not -1 (adj));  # es igual

select ("mañana" adv) if (not -1 ("la" det.def));
select ("temprano" adv) if (-1 ("muy"));
#select ("sí" [es] adv) if (not 1 (v));  # sí los bloquecitos  # replaced by adverb rule below
select ("sí" [es] adv) if (not -1 (prep));  # sí son las; sí los bloquecitos
select ("arriba" adv) if (-1 ("para" prep) or ("hasta" prep) or ("algo" pron));
select ("arriba" adv) if (0* ("poner" v));  # ponerle arriba
select ("así" [es] adv) if (1 inflected or ("mismo") or ("que"));  # así hablas; así mismo; así que


# Adjectives

substitute (adj.poss) (pron.poss) ([es] "of_.*"ri adj.poss) (not -1 ([es] n));  # los suyos
substitute (adj.dem) (pron.dem) ([es] adj.dem) (not 1([es] n)); # un hammock de esos;

select ([es] adj m sg) if (-1 ([es] n m sg) or (det.indef));  # un poco
select ([es] adj) if (1 (n));  # tiene bastante espacio; otro zip code

select ("mucho" adj) if (1 (n));  # mucho speed bump
select ("tarde" n) if (-1 (det.def));
select ("mejor" adj) if (1 (n));
select ("todo" [es] adj) if (1 (det.def));
select ("todo" [es] adj) if (1 ([es] adj.dem));  # todadj esadj cosa
select ("menos" adv) if (-1 ("o" conj)) (-2 ("más" adv));  # más o menos

remove ("este" n m sg) if (not -1 (det.def));  # porque este the one; 


#  Verbs

select (v) if (-1 ("así" [es] adv));
select (v pastpart) if (-1 ("haber") or ("estar"));
select (v infin) if (-1 ("para" [es] prep :for:));
#select (v 3s pres) if (-1 ("donde" l :where:) or (pron) or (pron.sub));
#select ([es] v pres) if (-1 ("si" [es] c));  # si entra (to remove imperative)
select ([es] v 2s non_imper) if (-1 ([es] pron.sub 2s));  # tú viste
#select ([es] v pres) if (-1 ([es] pron.refl) or ([es] conj));  # se asfalta; que vale
select non_imper if (-1 ([es] pron.refl mf 23sp) or ([es] conj) or ([es] pron.rel));  # se pudiera; se asfalta; que vale; lo que pasa
select ([es] v pres) if (-1 ([es] pron.obj));  # nos vamos
select ([es] v) if (-1 ([es] pron.sub));  # que yo sepa; ellos son;
select ([es] v pastpart) if (-1 ("ser"));  # siendo incorporados

substitute (13s) (1s) ([es] v 13s subj.pres) (-1 ([es] pron.sub mf 1s));  # que yo sepa
substitute (v m sg pastpart) (v pastpart) ([es] v m sg pastpart) (-1 ([es] "haber"));  # había muerto

select ("saber" [es] v 1s pres) if (-1 ("no") or (pron.sub));  # yo no sé; yo sé
select ("ir" [es] v past) if (-1 ([es] pron.obl) or ([es] pron.refl));  # y nos fuimos;
select ("ir" [es] v past) if (1 ("a" [es] prep));  # fuimos adj ver
select ("ser" [es] v) if (not 1 (v));
select ("ser" [es] v) if (not 1 (prep));
select ("ser" [es] v) if (1 ("como" conj));
select ("creer" [es] v) if (1 ("que" conj));  # yo creo que
select ("ver" [es] v) if (1 ("que" conj));  # viste que
select ("bajar" [es] v) if ((1 (n)) or (2 (n)));  # baja la velocidad


# Lexical selection

substitute (:remove:) (:retire:) ("retirar") (0* ("viejo"));  # adjust the meaning of "retirar" when "viejo" is nearby
substitute (:wear:) (:have_been:) ("llevar") (1 (v prespart));  # llevamos hablando tiempo


# Global rules

# 1 - remove less common tenses - has the effect of "deleting" items from the dictionary
#select (v 3s pres);
remove (subj.pres);
remove ("unir" [es] v 1s pres);  # que hagamos uno

# 2 - remove annoying words - needs to be looked at again!
remove ("vestir"); # pero viste las cositas
