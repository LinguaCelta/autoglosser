#  General notes
#  Combining or and not will not necessarily work: select (x) if (1 y) or (not 1 z) does not fire properly
#  If the tag substitution for English uses dotted notation, none of the other rules will bite, because they are all using spaced notation.
#  You can't combine conditions applying to a -1 position OR a 1 position.

DELIMITERS = "<.>" "<!>" "<?>";

LIST noun = n;
LIST verb = v;
LIST infinitive = (v infin);
SET inflected = (v) - (infin);  # ie the set of all verbs, minus the set of all infinitives; note that you cannot use LIST here
LIST preposition = p;
LIST pronoun = r;
LIST adjective = a;
LIST adverb = b;
LIST conjunction = c;
LIST concessive = "oh" "well";
LIST exclamation = e;
LIST interrogative = i;
LIST phrase = h;
LIST placename = pn;

LIST initvowel = "a.*"ri "e.*"ri "i.*"ri "o.*"ri "u.*"ri "w.*"ri "y.*"ri;

LIST preverbal = "<just>" "<actually>";

LIST modal = "licio" "gobeithio" "gallu";

LIST countable = "munud" "ceiniog";

#SET amvnoun = amvinf or amnoun;
# note use of "or" (|) above; "and" (+) does not work because it yields all possible combinations of the elements in the two sets; since the n and vinf tags will never occur together, the set will never be valid; the following has the same effect:
LIST amvnoun = (vinf am) or (n am);




SECTION

##### Rules for English #####

#remove ([en] infin) if (not 1 pronoun);

### Rewrite English tags ###

substitute (asv) (v+ing) ([en] n) (-1 ([es] v));  # combine with [1] below?
# The order of the source tags defines where the target tag will be placed;  here, the v+ing will go in the position occupied by asv; if you turn this around, to (n s asv), the v+ing will go in the position of n s.  The above also keeps the + in + asv; if the + is included in the source (+ asv n s) then it will also be removed from the line.  You need to include [en] in the target environment, otherwise it applies to ALL words tagged n, including Spanish ones.
#substitute (n) (v+ing) (n) (-1 ([es] v));

#substitute (infin) (prespart) ([en] asv) (-1 ([es] v 3s pres));  # doesn't work

substitute (gb) (+have.v.3s.pres) ("<he's>") (1 ([en] v past+p));  # he's got it

substitute (gb) (+be.v.3s.pres) ("<that's>");
substitute (gb) (+be.v.3s.pres) ("<it's>");
substitute (gb) (+be.v.3s.pres) ("<she's>");  # she's gonna be
substitute (gb) (+be.v.3s.pres) ("<there's>");  # there's no raise
substitute (gb) (+us.r.sub.1p) ("<let's>");  # let's bring

substitute (gb) (+poss) ([en] n s) (1 ([en] n));  # the daughter's pet

substitute (sv infin pv) (n p) ([en] v infin pv) (-1 ([en] a) or ([en] n));  # speed bumps
substitute (n s pv) (n p) ([en] n s pv);  # because pools are good; kids; houses

substitute (as) (a) ([en] as) (1 ([en] n));  # a miniature rabbit

#substitute (a comp.ag) (a.comp) ([en] comp.ag) (1 (n));  # smaller box
substitute (a comp.ag) (a.comp) ([en] comp.ag);  # is cheaper but - CHECK - try this wider version for a while
substitute (sv infin comp.ag) (n.ag) ([en] sv infin comp.ag) (-1 (t.ind));  # un camper

#substitute (pv) (v n: 3s t: pres) ([en] pv) (-1 ([en] d.far));  # that starts
substitute (sv infin pv) (v 3s pres) ([en] pv) (-1 ([en] d.far) or (r.sub 3s) or (r));  # that starts; he presses
substitute (sv infin) (v 12s13p pres) ("<don't>");  # you don't 
substitute (sv infin) (v prespart) ("<gonna>");  # gonna have

substitute (13s) (3s) ([en] v 13s) (not -1 (r.sub 1s));  # American_Outdoors was
substitute (12s13p) (1s) ([en] v 12s13p) (-1 (r.sub 1s));  # I don't
substitute (12s13p) (2sp) ([en] v 12s13p) (-1 (r.sub 2sp));  # you don't
substitute (12s13p) (3p) ([en] v 12s13p) (-1 (r.sub 3p));  # they don't
substitute (2s123p) (3p) ([en] v 2s123p) (-1 (r.sub 3p) or (n p));  # they were; the taxes were
substitute (123p) (2sp) ([en] v 123p) (-1 (r.sub 2sp));  # you are
substitute (123p) (3p) ([en] v 123p) (-1 (r.sub 3p));  # they are
substitute (123p) (3p) ([en] v 123p) (not -1 (r.sub 1p) or (r.sub 2p));  # so many people from the county are
substitute (123sp) (1s) ([en] v 123sp) (-1 (r.sub 1s));  # I can

substitute (sv infin asv) (v prespart) ([en] sv infin asv) (1 ([en] t.def) or ([en] d.far) or ([en] "for"));  # finding that; working for
substitute (sv infin asv) (v prespart) ([en] sv infin asv) (-1 ([en] "be"));  # we were looking;
substitute (sv infin asv) (v prespart) ([en] sv infin asv) (-1 ([en] v));  # that starts cooling;
substitute (sv infin asv) (v prespart) ([en] sv infin asv) (-2 ([en] v)) (-1 ("not"));;  # you are not seeing
substitute (sv infin asv) (v prespart) ([en] sv infin asv) (1 ([en] n));  # a camping spot;

substitute (sv infin av) (v pastpart) ([en] sv infin av) (-1 ([en] "be") or (+be.v.3s.pres) or ([en] "have"));  # it's slanted;
substitute (sv infin av) (v pastpart) ([en] sv infin av) (-2 ([en] "be") or (+be.v.3s.pres) or ([en] "have")) (-1 ("not"));  # have not increased

substitute (av past) (v past) ([en] av past) (-1 ([en] r.sub));  # we bought
#substitute (av past) (v past) ([en] av past) (not 1 ([en] n));  # that came about - too broad?
substitute (av past) (v pastpart) ([en] av past) (-1 (have.v.pres) or ("have") or ("be"));  # you've done; you have done; it was misspent
substitute (sv infin av) (v past) ([en] sv infin av) (-1 ([en] r.sub) or (name));  # they closed; Pepita moved
substitute (sv infin av) (v past) ([en] sv infin av) (-2 ([en] r.sub)) (-1 preverbal);  # they just closed

substitute (sv infin) (v 1s pres) ([en] sv infin) (-1 ([en] r.sub 1s));  # I mean
substitute (sv infin) (v 1p pres) ([en] sv infin) (-1 ([en] r.sub 1p));  # we do
substitute (sv infin) (v 2s pres) ([en] sv infin) (-1 ([en] r.sub 2s));  # you get
substitute (sv infin) (v 2sp pres) ([en] sv infin) (-1 ([en] r.sub 2sp));  # you know
substitute (sv infin) (v 2s pres) ([en] sv infin) (-2 ([en] r.sub 2s)) (-1 preverbal);  # you just get
substitute (sv infin) (v 3s pres) ([en] sv infin) (-1 ([en] r.sub 3s));  # he keep[s]
substitute (sv infin) (v 3p pres) ([en] sv infin) (-1 ([en] r.sub 3p) or (n p));  # they build; employees have

substitute (sv infin) (v infin) ([en] sv infin) ((-1 ("to" [en] p)) or (-2 ("to" [en] p)));  # to actually put it
substitute (sv infin) (v infin) ([en] sv infin) (-1 ("<gonna>"));  # gonna be
#substitute (sv infin) (v infin) ([en] sv infin) (1 ([en] r.sub));  # and open it
substitute (sv infin) (v imper) ([en] sv infin) ((-1 ("oh")) or (0 ("<let's>")));  # oh look!; let's bring

substitute (sv infin) (n s) ([en] sv infin) (-1 ([en] a) or ("t.*"r));  # a good deal; a raise; the cut
substitute (sv infin) (n s) ([en] sv infin) (-1 ([en] "more") or ([en] "no"));  # more work; no raise

substitute (av past+p) (v pastpart) ([en] av past+p) (-1 ([en] "have") or ("<he's>"));  # he's got it
substitute (av past+p) (v past) ([en] av past+p) (-1 ([en] r.sub) or (name));  # she got; Pepa had

substitute (r.sub) (r.obj) ([en] r.sub) (-1 ([en] v infin));  # and open it
substitute (r.sub) (r.obj) ([en] r.sub) (-1 ([en] v) link not 2 ([en] v));  # they take it away
substitute (r.sub) (r.obj) ([en] r.sub) (-1 ("<that's>") or ([en] "for" p) or ("worth"));  # that's it; for you; worth it

substitute (r.obj) (r.sub) ([en] r.obj 3s) (-1 ("<isn't>"));  # isn't it

substitute (r s p) (r p) ([en] r s p);  # miniature ones

substitute (a adv) (b) ([en] a adv);  # originally, fairly

substitute (b) (r) ("<there's>");  # originally, fairly


### English disambiguations ###

select ([en] d.far) if ((-1 ("like" c)) or (1 ("be" [en] v 3s)));  # like that; that is
select ([en] d.far) if (1 (a));
select ([en] d.far) if (0 ("<that's>"));  # so that's something
select ([en] d.far) if (1 (<<<));  # finding that. ; 

select ("that" [en] c) if (not 1 (a) or (n));  # CHECK - too broad?
select ("that" [en] c) if (1 (r.sub)) (2 (v));
select ("that" [en] c) if (1 ("have" [en] v 3s));  # that has
select ("that" [en] c) if (1 ([en] "t.*"r));  # that the; that a 
select ("that" [en] c) if (-2 ([en] t.def)) (-1 (r) or (n)) (1 (v));
select ("that" [en] c) if (-1 ("now") or ("so"));  # now that; so that
select ("that" [en] c) if (1 ("<it's>"));  # that it's 

select  ([en] r) if (not -1 (n));  # this one

select ([en] num) if (1 (n));  # one advantage

select ("like" sv infin) if (-1 ("do" [en] v pres neg));  # you don't like
select ("like" v 3s) if (-1 (r.sub 3s));  # he likes
select ("like" [en] c) if (1 ([en] t.ind));  # like a house
select ("like" [en] c) if (-1 preverbal);  # just like

select ("even" [en] a) if (not 1 (v));  # it's not even (=level)
select ("even" [en] b) if (1 (v));  # they don't even wanna

select ([en] n s) if (-1 ([en] t.ind));
select ([en] n s) if (1 ("of")) (2 ([en] t.ind));  # kind of a 

remove ([en] a) if (not 1 ([en] n));  # and open it  # CHECK!

select ([en] v infin) if (1 (r.obj) or (r));  # and then match everything
select ([en] v) if (-1 (r));  # everything opens up

# Global rules

# Incorrect segmentation of -er - perhaps better to do rules excluding these by context, since in some cases they can actually occur, eg a four-master ...
remove ("mast" [en] n s :mast: a.comp);  # mast-er
remove ("a"  [en] t.ind :a: pv);  # a-s
remove ("broth" [en] n s :broth: a.comp);  # broth-er




##### Rules for Spanish #####

# Articles

select ([es] t.def) if (1 (n f) or (a f) or (o f) or ([en] a) or ([en] n)); # los dry walls
select ([es] t.def) if (1 (n m) or (a m) or (o m));
select ([es] t.def) if (-1 ("de" p :of:));
select ([es] t.def) if (not 1 (v));  # los ladrillos ... los 
select ([es] t.def nt s) if (1 ("que" [es] c));  # en lo que

select ([es] t.ind f) if (1 (n f) or (a f) or (o f));
select ([es] t.ind m) if (1 (n m) or (a m) or (o m));
select ([es] t.ind) if (1 ([es] t.ind)) ;  # una ... un hammock
select ([es] t.ind) if (not 1 (n));  # una ... como se llama

# Conjunctions

select ("que" :which:) if (not -1 (adjective));
select ([es] interj) if (not 1 ([es] a));
select ("como" [es] c) if ((1  (r.subj) or ("que" [es] c) or ("aqu√≠" [es] b) or ("en" [es] p)) or ((-1 ("ser" v))));


# Prepositions

select ("para" [es] p :for:) if (1 (r.obj) or  (v infin) or ("que" c :which:) or (t.def));
select ("para" [es] p) if (1 ("dentro" b) or ("arriba" b));  # para dentro, para arriba
select ("entre" [es] p :between:) if (not 1 ("en"));


# Nouns

select ([es] n m s) if (-1 ([es] t.def m s) or ([es] t.ind m s));
#remove ([es] n m s) if (not -1 ([es] t.def m s) or ([es] t.ind m s));  crap!
select ([es] n m p) if (-1 ([es] t.def m p) or ([es] t.ind m p));
select ([es] n f s) if (-1 ([es] t.def f s) or ([es] t.ind f s));
select ([es] n f p) if (-1 ([es] t.def f p) or ([es] t.ind f p));

select ([es] n) if (1 ("del" p+t) or ("de" p));
select ([es] n) if (-1 ("de" p));  # de concreto
select ([es] n) if (-1 ("cualquier") or ("qu√©"));  # cualquier cosa; qu√© cosa
select ([es] n) if (-1 ([es] a.dem));  # esa cosa
select ([es] n) if (-1 ([es] a.poss));  # su idea


select ("gusto" n) if (-1 ("mucho" a));
select ("casa" n f s :house:) if (-1 (p));


# Demonstratives

select ("este" a.dem m s) if (1 (n m s));


# Pronouns

substitute (r.sub) (r.obj) ([es] r.sub) (-1 ("a" [es] p));  # a nosotros

select ([es] r.ref) if (1 (v 3s) or (v 13s) or (v 3p));
select ([es] r.obj) if (1 ("que" c :which:));
select ("s√≠" [es] r.p mf 3s) if (1 ([es] v));
select ([es] r.sub 1s) if (1 ([es] v 1s));  # yo recuerdo;

select ("√©l" [es] r.obj) if (1 (v));
select ("otro" r) if (not 1 (n));
select ("uno" [es] r) if (1 ("de"));
select ("todo" [es] r) if (1 (v));
select ("uno" [es] r) if (1 ("<.>"));  # has visto uno. ;


# Adverbs

select ("temprano" b) if (-1 ("muy"));
select ("s√≠" [es] b) if (not 1 (v));  # s√≠ los bloquecitos
select ("arriba" b) if (-1 ("para" p) or ("hasta" p));
select ("as√≠" [es] b) if (1 inflected or ("mismo"));  # as√≠ hablas; as√≠ mismo

# Adjectives

select ([es] a m s) if (-1 ([es] n m s) or (t.ind));  # un poco
select ([es] a) if (1 ([es] n));  # tiene bastante espacio

select ("mucho" a) if (1 (n));  # mucho speed bump
select ("tarde" n) if (-1 (t.def));
select ("mejor" a) if (1 (n));
select ("todo" [es] a) if (1 (t.def));
select ("tanto" [es] a) if (-1 ("no"));  # no tanto este lado
select ("todo" [es] a) if (1 ([es] a.dem));  # toda esa cosa
select ("menos" b) if (-1 ("o" c)) (-2 ("m√°s" b));  # m√°s o menos


#  Verbs

select (v) if (-1 ("as√≠" [es] b));
select (v pastpart) if (-1 ("haber") or ("estar"));
select (v infin) if (-1 ("para" [es] p :for:));
select (v 3s pres) if (-1 ("donde" l :where:));
select ([es] v pres) if (-1 ("si" [es] c));  # si entra (to remove imperative)
select ([es] v 2s past) if (-1 ([es] r.sub 2s));  # t√∫ viste
select ([es] v pres) if (-1 ([es] r.ref) or ([es] c));  # se asfalta; que vale
select ([es] v 3s) if (-1 ([es] r.ref mf 3sp));  # se pudiera
select ([es] v pres) if (-1 ([es] r.obj));  # nos vamos
select ([es] v 1s) if (-1 ([es] r.sub 1s));  # que yo sepa


select ("ser" [es] v 13s imperf :be:) if (not 1 (v));
select ("ser" [es] v 3s past :be:) if (not 1 (preposition));
select ("ser" [es] v) if (1 ("como" c));
select ("saber" [es] v 1s pres) if (-1 ("no"));  # yo no s√© - this is probably too broad
select ("creer" [es] v) if (1 ("que" c));  # yo creo que
select ("ver" [es] v) if (1 ("que" c));  # viste que
select ("bajar" [es] v) if ((1 (n)) or (2 (n)));  # baja la velocidad
select ("ir" [es] v past) if (-1 ([es] r.obj));  # y nos fuimos;
select ("ir" [es] v past) if (1 ("a" [es] p));  # fuimos a ver


# Global rules

# 1- remove less common tenses - has the effect of "deleting" items from the dictionary
#select (v 3s pres);
remove (pressubj);
remove ("unir" [es] v 1s pres);  # que hagamos uno
