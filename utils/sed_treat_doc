#!/bin/sh

#/* 
#*********************************************************************
#Copyright Kevin Donnelly 2010, 2011.
#kevindonnelly.org.uk
#This file is part of the Bangor Autoglosser.
#
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License and the GNU
#Affero General Public License as published by the Free Software
#Foundation, either version 3 of the License, or (at your option)
#any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#and the GNU Affero General Public License along with this program.
#If not, see <http://www.gnu.org/licenses/>.
#*********************************************************************
#*/ 

# This script formats the translator doc files so that they are ready for import to the database.

FILES=miamitrans/fraibet/returned/zeledon8_tagless.txt

for f in $FILES
do
	echo "Processing $f ..."
	sed -i '/^$/ d' $f
	# remove blank lines
	sed -i 's/[[:blank:]]$//g' $f
	# remove tabs at the end of the line
	sed -i '/^\*\?[A-Z]*:.*$/ d' $f
	# remove speaker tier (could maybe be shortened)
	sed -i 's/ \[.[^ ]*\]/,/g' $f
	# remove anything in square brackets
	sed -i 's/( \?.[^ ]\+)//g' $f
	sed -i 's/(.)//g' $f
	# remove (.) etc
	sed -i 's/+\///g' $f
	# remove +/
	sed -i 's/xxx/[...]/g' $f
	sed -i 's/&=.[^ ]*//g' $f
	# get rid of &=whatever
	sed -i 's/&..\? / /g' $f
	# get rid of &xx IPA things
	sed -i "s/’/'/g" $f
	sed -i "s/’/'/g" $f
	sed -i 's/”/"/g' $f
	# change smart quotes to real quotes
	sed -i 's/+[<^+,"]//g' $f
	# remove continuation markers
	sed -i 's/ \.$/./g' $f
	# close up full stops to previous text
	sed -i 's/ ?$/./g' $f
	# close up full stops to previous text
	sed -i 's/ !$/./g' $f
	# close up full stops to previous text
	sed -i 's/ \+/ /g' $f
	# squash down more than one space
done
